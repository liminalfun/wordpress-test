'use strict';;let config,gulp,plumber,browsersync,sass,postcss,autoprefixer,cssnano,stylelint,sourcemaps,atImport,rename,gulpif;_dff‍.x([["taskStyles",()=>taskStyles],["taskStylesLint",()=>taskStylesLint],["taskStylesFix",()=>taskStylesFix]]);_dff‍.w("../_development/config/config",[["default",["config"],function(v){config=v}]]);_dff‍.w("gulp",[["default",["gulp"],function(v){gulp=v}]]);_dff‍.w("gulp-plumber",[["default",["plumber"],function(v){plumber=v}]]);_dff‍.w("browser-sync",[["default",["browsersync"],function(v){browsersync=v}]]);_dff‍.w("gulp-sass",[["default",["sass"],function(v){sass=v}]]);_dff‍.w("gulp-postcss",[["default",["postcss"],function(v){postcss=v}]]);_dff‍.w("autoprefixer",[["default",["autoprefixer"],function(v){autoprefixer=v}]]);_dff‍.w("cssnano",[["default",["cssnano"],function(v){cssnano=v}]]);_dff‍.w("gulp-stylelint",[["default",["stylelint"],function(v){stylelint=v}]]);_dff‍.w("gulp-sourcemaps",[["default",["sourcemaps"],function(v){sourcemaps=v}]]);_dff‍.w("postcss-import",[["default",["atImport"],function(v){atImport=v}]]);_dff‍.w("gulp-rename",[["default",["rename"],function(v){rename=v}]]);_dff‍.w("gulp-if",[["default",["gulpif"],function(v){gulpif=v}]]);















function taskStyles(src, dest, production = true) {
    const timestamp = Math.floor(Date.now() / 1000);

    return gulp.src(src)
        .pipe(gulpif(production !== true, plumber({
            errorHandler: function (err) {
                _dff‍.g.console.log(err.message);
                this.emit('end');
            }
        }), sourcemaps.init()))
        .pipe(sass({
            includePaths: config.paths.includePaths,
        }))
        .pipe(postcss([
            atImport(),
            autoprefixer(),
            cssnano()
        ]))
        .pipe(gulpif(production === true, rename({
            suffix: '.' + timestamp
        })))
        .pipe(gulpif(production !== true, sourcemaps.write('./')))
        .pipe(gulp.dest(dest))
        .pipe(browsersync.stream());
}

function taskStylesLint(src) {
    return gulp.src(src)
        .pipe(plumber())
        .pipe(stylelint(config.plugins.stylelint));
}

function taskStylesFix(src, dest) {
    config.plugins.stylelint.fix = true;

    return gulp.src(src)
        .pipe(plumber())
        .pipe(stylelint(config.plugins.stylelint))
        .pipe(gulp.dest(dest));
}






