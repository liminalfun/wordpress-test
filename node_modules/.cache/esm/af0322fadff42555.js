'use strict';;let config,taskStyles,taskStylesLint,taskStylesFix;_dff‍.x([["styles",()=>styles],["stylesDev",()=>stylesDev],["stylesLint",()=>stylesLint],["stylesFix",()=>stylesFix]]);_dff‍.w("../_development/config/config",[["default",["config"],function(v){config=v}]]);_dff‍.w("./task-styles",[["taskStyles",["taskStyles"],function(v){taskStyles=v}],["taskStylesLint",["taskStylesLint"],function(v){taskStylesLint=v}],["taskStylesFix",["taskStylesFix"],function(v){taskStylesFix=v}]]);




function styles() {
    const src = config.paths.base.src + config.paths.styles.src + config.paths.styles.entry;
    const dest = config.paths.base.dest + config.paths.styles.dest;

    return taskStyles(src, dest);
}

function stylesDev() {
    const src = config.paths.base.src + config.paths.styles.src + config.paths.styles.entry;
    const dest = config.paths.base.dest + config.paths.styles.dest;

    return taskStyles(src, dest, false);
}

function stylesLint() {
    const src = config.paths.base.src + config.paths.styles.src + '/**/*.scss';

    return taskStylesLint(src);
}

function stylesFix() {
    const src = config.paths.base.src + config.paths.styles.src + '/**/*.scss';
    const dest = config.paths.base.src + config.paths.styles.src;

    return taskStylesFix(src, dest);
}







